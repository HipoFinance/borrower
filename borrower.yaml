# Friendly address of hTON treasury.
treasury: EQBNo5qAG8I8J6IxGaz15SfQVB-kX98YhKV_mT36Xo5vYxUa

# The path to the ton global config.
global_config: /usr/bin/ton/global.config.json

# Configure borrowing.
borrow:
    # Whether the borrowing functionality is active or not.
    active: yes # yes | no

    # Additional amount to stake alongside the borrowed loan.
    stake: "0" # TON amount

    # The minimum loan amount. When zero, network config of min_stake will be used.
    loan: "0" # TON amount

    # The minimum payment to pay for the loan, when it is accepted.
    min_payment: "0" # TON amount

    # The max factor in relation to the minimum stake accepted by the elector.
    max_factor_ratio: 3.0 # >= 1.0

    # The ratio to divide the reward of validation between treasury and you.
    # It will be divided by 255, so for example 102 means 40%.
    validator_reward_share: 102 # 0-255

# Configure the wallet used to pay for loan requests.
wallet:
    # The type of the secret file.
    # Use mnemonic when the file has the 24-word seed.
    # Use binary when the file has the secret key in binary form.
    type: mnemonic # mnemonic | binary

    # The path to the secret file of the wallet.
    path: wallet.secret

    # The version of wallet smart-contract.
    version: v4r2 # v4r2 | v3r2

# Configure your validator engine here.
validator_engine:
    # The path to the validator-engine-console executable.
    executable: /usr/bin/ton/validator-engine-console/validator-engine-console

    # The path to the client secret key.
    client_key: /var/ton-work/keys/client

    # The path to the server public key.
    server_key: /var/ton-work/keys/server.pub

    # The IP address of the validator engine.
    ip: "127.0.0.1"

    # The port for control interface.
    control_port: 6269

    # Find the hex encoded ADNL address of your validator in `mytonctrl` using the `status` command.
    adnl_address:

# Configure tonlib-cli
tonlib_cli:
    # The path to the tonlib-cli executable.
    executable: /usr/bin/ton/tonlib/tonlib-cli
